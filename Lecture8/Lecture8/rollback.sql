/*
Deployment script for Prod

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DbVersion "2"
:setvar DatabaseName "Prod"
:setvar DefaultFilePrefix "Prod"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.NEW\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.NEW\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

insert into dbo.DbVersions(DvVersion,DateStart,DateEnd)
values($(DbVersion),GETDATE(),null)
GO

GO
PRINT N'Creating [dbo].[Customers]...';


GO
CREATE TABLE [dbo].[Customers] (
    [CustomerId]   INT          IDENTITY (1, 1) NOT NULL,
    [CustomerName] VARCHAR (50) NULL,
    CONSTRAINT [PK_Customers] PRIMARY KEY CLUSTERED ([CustomerId] ASC),
    CONSTRAINT [UQ_Customers_CustomerName] UNIQUE NONCLUSTERED ([CustomerName] ASC)
);


GO
PRINT N'Creating [dbo].[Customers].[IX_OrdersHeader_CustomerId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrdersHeader_CustomerId]
    ON [dbo].[Customers]([CustomerId] ASC);


GO
PRINT N'Creating [dbo].[DbVersions]...';


GO
CREATE TABLE [dbo].[DbVersions] (
    [DvVersion] NCHAR (5) NOT NULL,
    [DateStart] DATETIME  NOT NULL,
    [DateEnd]   DATETIME  NULL,
    PRIMARY KEY CLUSTERED ([DvVersion] ASC)
);


GO
PRINT N'Creating [dbo].[Medicines]...';


GO
CREATE TABLE [dbo].[Medicines] (
    [MedicineId]   INT          IDENTITY (1, 1) NOT NULL,
    [MedicineName] VARCHAR (50) NULL,
    CONSTRAINT [PK_Medicines] PRIMARY KEY CLUSTERED ([MedicineId] ASC),
    CONSTRAINT [UQ_Medicines_MedicineName] UNIQUE NONCLUSTERED ([MedicineName] ASC)
);


GO
PRINT N'Creating [dbo].[Medicines].[IX_OrdersLine_MedicineId]...';


GO
CREATE NONCLUSTERED INDEX [IX_OrdersLine_MedicineId]
    ON [dbo].[Medicines]([MedicineId] ASC);


GO
PRINT N'Creating [dbo].[OrdersHeader]...';


GO
CREATE TABLE [dbo].[OrdersHeader] (
    [OrderHeaderID]   INT      IDENTITY (1, 1) NOT NULL,
    [CustomerId]      INT      NULL,
    [OrderHeaderDate] DATETIME NULL,
    CONSTRAINT [PK_OrdersHeader] PRIMARY KEY CLUSTERED ([OrderHeaderID] ASC)
);


GO
PRINT N'Creating [dbo].[OrdersLine]...';


GO
CREATE TABLE [dbo].[OrdersLine] (
    [OrderHeaderID] INT             NOT NULL,
    [MedicineId]    INT             NOT NULL,
    [Quantity]      INT             NULL,
    [Price]         DECIMAL (10, 2) NULL,
    [Sum]           AS              ([Quantity] * [Price]),
    CONSTRAINT [PK_OrdersLine] PRIMARY KEY CLUSTERED ([OrderHeaderID] ASC, [MedicineId] ASC)
);


GO
PRINT N'Creating [dbo].[PurchaseInvoicesHeader]...';


GO
CREATE TABLE [dbo].[PurchaseInvoicesHeader] (
    [PurchaseInvoiceHeaderID]   INT      IDENTITY (1, 1) NOT NULL,
    [SupplierId]                INT      NULL,
    [PurchaseInvoiceHeaderDate] DATETIME NULL,
    CONSTRAINT [PK_PurchaseInvoicesHeader] PRIMARY KEY CLUSTERED ([PurchaseInvoiceHeaderID] ASC)
);


GO
PRINT N'Creating [dbo].[PurchaseInvoicesHeader].[IX_PurchaseInvoicesHeader_SupplierId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PurchaseInvoicesHeader_SupplierId]
    ON [dbo].[PurchaseInvoicesHeader]([SupplierId] ASC);


GO
PRINT N'Creating [dbo].[PurchaseInvoicesLine]...';


GO
CREATE TABLE [dbo].[PurchaseInvoicesLine] (
    [PurchaseInvoiceHeaderID] INT             NOT NULL,
    [MedicineId]              INT             NOT NULL,
    [Quantity]                INT             NULL,
    [Price]                   DECIMAL (10, 2) NULL,
    [Sum]                     AS              ([Quantity] * [Price]),
    CONSTRAINT [PK_PurchaseInvoicesLine] PRIMARY KEY CLUSTERED ([PurchaseInvoiceHeaderID] ASC, [MedicineId] ASC)
);


GO
PRINT N'Creating [dbo].[PurchaseInvoicesLine].[IX_PurchaseInvoicesLine_MedicineId]...';


GO
CREATE NONCLUSTERED INDEX [IX_PurchaseInvoicesLine_MedicineId]
    ON [dbo].[PurchaseInvoicesLine]([MedicineId] ASC);


GO
PRINT N'Creating [dbo].[StockChanges]...';


GO
CREATE TABLE [dbo].[StockChanges] (
    [MedicineId] INT      NOT NULL,
    [DocID]      INT      NOT NULL,
    [DocType]    TINYINT  NOT NULL,
    [ChangeDate] DATETIME NULL,
    [Quantity]   INT      NOT NULL,
    CONSTRAINT [PK_StockChanges] PRIMARY KEY CLUSTERED ([MedicineId] ASC, [DocID] ASC, [DocType] ASC)
);


GO
PRINT N'Creating [dbo].[Suppliers]...';


GO
CREATE TABLE [dbo].[Suppliers] (
    [SupplierId]   INT          IDENTITY (1, 1) NOT NULL,
    [SupplierName] VARCHAR (50) NULL,
    CONSTRAINT [PK_Suppliers] PRIMARY KEY CLUSTERED ([SupplierId] ASC),
    CONSTRAINT [UQ_Suppliers_SupplierName] UNIQUE NONCLUSTERED ([SupplierName] ASC)
);


GO
PRINT N'Creating [dbo].[FK_OrdersHeader_CustomerId]...';


GO
ALTER TABLE [dbo].[OrdersHeader] WITH NOCHECK
    ADD CONSTRAINT [FK_OrdersHeader_CustomerId] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customers] ([CustomerId]);


GO
PRINT N'Creating [dbo].[FK_OrdersLine_MedicineId]...';


GO
ALTER TABLE [dbo].[OrdersLine] WITH NOCHECK
    ADD CONSTRAINT [FK_OrdersLine_MedicineId] FOREIGN KEY ([MedicineId]) REFERENCES [dbo].[Medicines] ([MedicineId]);


GO
PRINT N'Creating [dbo].[FK_OrdersLine_OrderHeaderID]...';


GO
ALTER TABLE [dbo].[OrdersLine] WITH NOCHECK
    ADD CONSTRAINT [FK_OrdersLine_OrderHeaderID] FOREIGN KEY ([OrderHeaderID]) REFERENCES [dbo].[OrdersHeader] ([OrderHeaderID]);


GO
PRINT N'Creating [dbo].[FK_PurchaseInvoicesHeader_SupplierId]...';


GO
ALTER TABLE [dbo].[PurchaseInvoicesHeader] WITH NOCHECK
    ADD CONSTRAINT [FK_PurchaseInvoicesHeader_SupplierId] FOREIGN KEY ([SupplierId]) REFERENCES [dbo].[Suppliers] ([SupplierId]);


GO
PRINT N'Creating [dbo].[FK_PurchaseInvoicesLine_MedicineId]...';


GO
ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH NOCHECK
    ADD CONSTRAINT [FK_PurchaseInvoicesLine_MedicineId] FOREIGN KEY ([MedicineId]) REFERENCES [dbo].[Medicines] ([MedicineId]);


GO
PRINT N'Creating [dbo].[FK_PurchaseInvoicesLine_PurchaseInvoiceHeaderID]...';


GO
ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH NOCHECK
    ADD CONSTRAINT [FK_PurchaseInvoicesLine_PurchaseInvoiceHeaderID] FOREIGN KEY ([PurchaseInvoiceHeaderID]) REFERENCES [dbo].[PurchaseInvoicesHeader] ([PurchaseInvoiceHeaderID]);


GO
PRINT N'Creating [dbo].[CK_OrdersLineLine]...';


GO
ALTER TABLE [dbo].[OrdersLine] WITH NOCHECK
    ADD CONSTRAINT [CK_OrdersLineLine] CHECK ([Quantity]>(0));


GO
PRINT N'Creating [dbo].[CK_PurchaseInvoicesLine]...';


GO
ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH NOCHECK
    ADD CONSTRAINT [CK_PurchaseInvoicesLine] CHECK ([Quantity]>(0));


GO
PRINT N'Creating [dbo].[StocksView]...';


GO

create view dbo.StocksView
with schemabinding
as 
select 
	  MedicineId
	, sum(Quantity) as Stock
	, count_big(*) as Row_Count
from dbo.StockChanges
group by MedicineId
GO
PRINT N'Creating [dbo].[StocksView].[IX_StockView]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_StockView]
    ON [dbo].[StocksView]([MedicineId] ASC);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DECLARE @texts varchar(30) = 'Hello World'

update dbo.DbVersions 
set DateEnd = getdate()
where DvVersion = $(DbVersion)
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[OrdersHeader] WITH CHECK CHECK CONSTRAINT [FK_OrdersHeader_CustomerId];

ALTER TABLE [dbo].[OrdersLine] WITH CHECK CHECK CONSTRAINT [FK_OrdersLine_MedicineId];

ALTER TABLE [dbo].[OrdersLine] WITH CHECK CHECK CONSTRAINT [FK_OrdersLine_OrderHeaderID];

ALTER TABLE [dbo].[PurchaseInvoicesHeader] WITH CHECK CHECK CONSTRAINT [FK_PurchaseInvoicesHeader_SupplierId];

ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH CHECK CHECK CONSTRAINT [FK_PurchaseInvoicesLine_MedicineId];

ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH CHECK CHECK CONSTRAINT [FK_PurchaseInvoicesLine_PurchaseInvoiceHeaderID];

ALTER TABLE [dbo].[OrdersLine] WITH CHECK CHECK CONSTRAINT [CK_OrdersLineLine];

ALTER TABLE [dbo].[PurchaseInvoicesLine] WITH CHECK CHECK CONSTRAINT [CK_PurchaseInvoicesLine];


GO
PRINT N'Update complete.';


GO
